-- MySQL Script generated by MySQL Workbench
-- Mon Jul  3 18:41:48 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_mercado
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_mercado
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_mercado` DEFAULT CHARACTER SET utf8;
USE `db_mercado` ;

-- -----------------------------------------------------
-- Table `db_mercado`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`categoria` (
  `idcategoria` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`idcategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`produto` (
  `idproduto` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(120) NOT NULL,
  `marca` VARCHAR(70) NOT NULL,
  `preco` DECIMAL(6,2) NOT NULL,
  `estoque` INT(4) NOT NULL,
  `nome_imagem` VARCHAR(50) NULL,
  `idcategoria` INT NOT NULL,
  PRIMARY KEY (`idproduto`),
  INDEX `fk_produto_categoria1_idx` (`idcategoria` ASC),
  CONSTRAINT `fk_produto_categoria1`
    FOREIGN KEY (`idcategoria`)
    REFERENCES `db_mercado`.`categoria` (`idcategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`situacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`situacao` (
  `idsituacao` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`idsituacao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`estado` (
  `idestado` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(70) NOT NULL,
  `sigla` VARCHAR(2) NULL,
  PRIMARY KEY (`idestado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`cidade` (
  `idcidade` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(70) NOT NULL,
  `idestado` INT NOT NULL,
  PRIMARY KEY (`idcidade`),
  INDEX `fk_cidade_estado1_idx` (`idestado` ASC),
  CONSTRAINT `fk_cidade_estado1`
    FOREIGN KEY (`idestado`)
    REFERENCES `db_mercado`.`estado` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`bairro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`bairro` (
  `idbairro` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(70) NOT NULL,
  `idcidade` INT NOT NULL,
  PRIMARY KEY (`idbairro`),
  INDEX `fk_bairro_cidade1_idx` (`idcidade` ASC),
  CONSTRAINT `fk_bairro_cidade1`
    FOREIGN KEY (`idcidade`)
    REFERENCES `db_mercado`.`cidade` (`idcidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`usuario` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `cpf` BIGINT(11) NOT NULL,
  `telefone` BIGINT(11) NOT NULL,
  `email` VARCHAR(70) NOT NULL,
  `senha` CHAR(100) NOT NULL,
  `permissao` TINYINT(1) NOT NULL,
  `endereco` VARCHAR(70) NOT NULL,
  `numero` INT(5) NOT NULL,
  `cep` BIGINT(8) NOT NULL,
  `idbairro` INT NOT NULL,
  PRIMARY KEY (`idusuario`),
  INDEX `fk_usuario_bairro1_idx` (`idbairro` ASC),
  CONSTRAINT `fk_usuario_bairro1`
    FOREIGN KEY (`idbairro`)
    REFERENCES `db_mercado`.`bairro` (`idbairro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`pedido` (
  `idpedido` INT NOT NULL AUTO_INCREMENT,
  `idusuario_cliente` INT NOT NULL,
  PRIMARY KEY (`idpedido`),
  INDEX `fk_pedido_usuario1_idx` (`idusuario_cliente` ASC),
  CONSTRAINT `fk_pedido_usuario1`
    FOREIGN KEY (`idusuario_cliente`)
    REFERENCES `db_mercado`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`cartao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`cartao` (
  `idcartao` INT NOT NULL AUTO_INCREMENT,
  `nome_proprietario` VARCHAR(100) NOT NULL,
  `numero_cartao` BIGINT(16) NOT NULL,
  `bandeira` VARCHAR(50) NOT NULL,
  `mes_validade` SMALLINT(2) NOT NULL,
  `ano_validade` INT(4) NOT NULL,
  `cvv` INT(4) NOT NULL,
  `cpf` BIGINT(11) NOT NULL,
  `idusuario` INT NOT NULL,
  PRIMARY KEY (`idcartao`),
  INDEX `fk_cartao_usuario1_idx` (`idusuario` ASC),
  CONSTRAINT `fk_cartao_usuario1`
    FOREIGN KEY (`idusuario`)
    REFERENCES `db_mercado`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`pagamento` (
  `idpagamento` INT NOT NULL AUTO_INCREMENT,
  `valor_total` DECIMAL(6,2) NOT NULL,
  `idcartao` INT NOT NULL,
  `idpedido` INT NOT NULL,
  PRIMARY KEY (`idpagamento`),
  INDEX `fk_pagamento_cartao1_idx` (`idcartao` ASC),
  INDEX `fk_pagamento_pedido1_idx` (`idpedido` ASC),
  CONSTRAINT `fk_pagamento_cartao1`
    FOREIGN KEY (`idcartao`)
    REFERENCES `db_mercado`.`cartao` (`idcartao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pagamento_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `db_mercado`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`feedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`feedback` (
  `idfeedback` INT NOT NULL AUTO_INCREMENT,
  `estrelas` TINYINT(1) NULL,
  `opiniao` TEXT NULL,
  `idpedido` INT NOT NULL,
  PRIMARY KEY (`idfeedback`),
  INDEX `fk_feedback_pedido1_idx` (`idpedido` ASC),
  CONSTRAINT `fk_feedback_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `db_mercado`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`funcionario` (
  `idfuncionario` INT NOT NULL,
  `cargo` VARCHAR(20) NOT NULL,
  `salario` DECIMAL(6,2) NOT NULL,
  `data_contratacao` DATE NOT NULL,
  PRIMARY KEY (`idfuncionario`),
  INDEX `fk_funcionario_usuario1_idx` (`idfuncionario` ASC),
  CONSTRAINT `fk_funcionario_usuario1`
    FOREIGN KEY (`idfuncionario`)
    REFERENCES `db_mercado`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`pedido_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`pedido_item` (
  `idpedido` INT NOT NULL,
  `idproduto` INT NOT NULL,
  `qtd_item` INT(4) NOT NULL,
  PRIMARY KEY (`idpedido`, `idproduto`),
  INDEX `fk_pedido_has_produto_produto1_idx` (`idproduto` ASC),
  INDEX `fk_pedido_has_produto_pedido1_idx` (`idpedido` ASC),
  CONSTRAINT `fk_pedido_has_produto_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `db_mercado`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_produto_produto1`
    FOREIGN KEY (`idproduto`)
    REFERENCES `db_mercado`.`produto` (`idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`pedido_situacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`pedido_situacao` (
  `idpedido` INT NOT NULL,
  `idsituacao` INT NOT NULL,
  `data_atualizacao` DATE NOT NULL,
  PRIMARY KEY (`idpedido`, `idsituacao`),
  INDEX `fk_pedido_has_situacao_situacao1_idx` (`idsituacao` ASC),
  INDEX `fk_pedido_has_situacao_pedido1_idx` (`idpedido` ASC),
  CONSTRAINT `fk_pedido_has_situacao_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `db_mercado`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_situacao_situacao1`
    FOREIGN KEY (`idsituacao`)
    REFERENCES `db_mercado`.`situacao` (`idsituacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_mercado`.`pedido_funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_mercado`.`pedido_funcionario` (
  `idpedido` INT NOT NULL,
  `idfuncionario` INT NOT NULL,
  PRIMARY KEY (`idpedido`, `idfuncionario`),
  INDEX `fk_pedido_has_funcionario_pedido1_idx` (`idpedido` ASC),
  INDEX `fk_pedido_funcionario_funcionario1_idx` (`idfuncionario` ASC),
  CONSTRAINT `fk_pedido_has_funcionario_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `db_mercado`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_funcionario_funcionario1`
    FOREIGN KEY (`idfuncionario`)
    REFERENCES `db_mercado`.`funcionario` (`idfuncionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
